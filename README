Hangman Web App

The classic word guessing game.

The game follows the specifications provided:

    - When the game is started, the player is represented with an empty field for
      each letter in the word.

    - When the player guesses a letter correctly, each field that represents that
      letter is filled with the letter.

    - When the player guesses a letter incorrectly, a piece of a gallow with a
      hanging man is drawn.

    - After 10 incorrect guesses, the game is over and the player lost. Thus,
      there should be 10 different states of the gallow to be drawn.

    - If all fields are filled with their letter before 10 incorrect guesses, the
      player has won the game.

 As far as the technical requirements are concerned:

    - Server/client based with the client being the browser - Done

    - Business logic executed on the server (so nobody can cheat) - Done

    - Allow for keeping simple statistics (games won/lost) - Done

    - Game is self-contained    - Done

    - Game must scale to millions of users - As of now it does not support multiple users, but can be implemented by creating a user profile for users and maintaining a database of users.

 The application was developed using HTML, CSS (materialize), AngularJS and a bit of JQuery for front end and Javascript, NodeJS for backend services.
 Took a total of 2 days to complete the application.

 Missing elements - test scripts: Would need one more day to test it using Karma and Jasmine.

 Instructions to run on linux:
     Install NodeJS to run the server.js
     Application runs on port 4000 specified in server.js
     to use it in the browser, connect to localhost on port 4000.
     Dependencies are specified in package.json, npm install missing packages if any.

     To run the server: node server.js
     change the port number in server.js if address is in use and use the same port on browser.

     On the browser: http://localhost:4000/#/



